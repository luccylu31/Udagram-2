{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { j as clamp } from './helpers-da915de8.js';\nimport { i as isRTL } from './dir-babeabeb.js';\nimport { createGesture } from './index-39782642.js';\nimport './gesture-controller-314a54f6.js';\n\nvar createSwipeBackGesture = function createSwipeBackGesture(el, canStartHandler, onStartHandler, onMoveHandler, onEndHandler) {\n  var win = el.ownerDocument.defaultView;\n  var rtl = isRTL(el);\n  /**\n   * Determine if a gesture is near the edge\n   * of the screen. If true, then the swipe\n   * to go back gesture should proceed.\n   */\n\n  var isAtEdge = function isAtEdge(detail) {\n    var threshold = 50;\n    var startX = detail.startX;\n\n    if (rtl) {\n      return startX >= win.innerWidth - threshold;\n    }\n\n    return startX <= threshold;\n  };\n\n  var getDeltaX = function getDeltaX(detail) {\n    return rtl ? -detail.deltaX : detail.deltaX;\n  };\n\n  var getVelocityX = function getVelocityX(detail) {\n    return rtl ? -detail.velocityX : detail.velocityX;\n  };\n\n  var canStart = function canStart(detail) {\n    /**\n     * The user's locale can change mid-session,\n     * so we need to check text direction at\n     * the beginning of every gesture.\n     */\n    rtl = isRTL(el);\n    return isAtEdge(detail) && canStartHandler();\n  };\n\n  var onMove = function onMove(detail) {\n    // set the transition animation's progress\n    var delta = getDeltaX(detail);\n    var stepValue = delta / win.innerWidth;\n    onMoveHandler(stepValue);\n  };\n\n  var onEnd = function onEnd(detail) {\n    // the swipe back gesture has ended\n    var delta = getDeltaX(detail);\n    var width = win.innerWidth;\n    var stepValue = delta / width;\n    var velocity = getVelocityX(detail);\n    var z = width / 2.0;\n    var shouldComplete = velocity >= 0 && (velocity > 0.2 || delta > z);\n    var missing = shouldComplete ? 1 - stepValue : stepValue;\n    var missingDistance = missing * width;\n    var realDur = 0;\n\n    if (missingDistance > 5) {\n      var dur = missingDistance / Math.abs(velocity);\n      realDur = Math.min(dur, 540);\n    }\n\n    onEndHandler(shouldComplete, stepValue <= 0 ? 0.01 : clamp(0, stepValue, 0.9999), realDur);\n  };\n\n  return createGesture({\n    el: el,\n    gestureName: 'goback-swipe',\n\n    /**\n     * Swipe to go back should have priority over other horizontal swipe\n     * gestures. These gestures have a priority of 100 which is why 101 was chosen here.\n     */\n    gesturePriority: 101,\n    threshold: 10,\n    canStart: canStart,\n    onStart: onStartHandler,\n    onMove: onMove,\n    onEnd: onEnd\n  });\n};\n\nexport { createSwipeBackGesture };","map":null,"metadata":{},"sourceType":"module"}