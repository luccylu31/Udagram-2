{"ast":null,"code":"import _defineProperty from \"D:/Udemy/Hosting AWS/Udagram/nd0067-c4-deployment-process-project-starter-online/udagram/udagram-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regeneratorRuntime from \"D:/Udemy/Hosting AWS/Udagram/nd0067-c4-deployment-process-project-starter-online/udagram/udagram-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/Udemy/Hosting AWS/Udagram/nd0067-c4-deployment-process-project-starter-online/udagram/udagram-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"D:/Udemy/Hosting AWS/Udagram/nd0067-c4-deployment-process-project-starter-online/udagram/udagram-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Udemy/Hosting AWS/Udagram/nd0067-c4-deployment-process-project-starter-online/udagram/udagram-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, h, f as Host, i as getElement } from './index-7a952e7a.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-fe2083dc.js';\nimport { o as getPresentedOverlay, n as focusFirstDescendant, q as focusLastDescendant } from './overlays-e1bad9cd.js';\nimport { G as GESTURE_CONTROLLER } from './gesture-controller-314a54f6.js';\nimport { shouldUseCloseWatcher } from './hardware-back-button-2e99752e.js';\nimport { n as isEndSide, i as inheritAriaAttributes, m as assert, j as clamp } from './helpers-da915de8.js';\nimport { m as menuController } from './index-4094f808.js';\nimport { h as hostContext, c as createColorClasses } from './theme-01f3f29c.js';\nimport { c as config, b as getIonMode } from './ionic-global-81a1064f.js';\nimport { u as menuOutline, v as menuSharp } from './index-e2cf2ceb.js';\nimport './index-a5d50daf.js';\nimport './framework-delegate-63d1a679.js';\nimport './index-9b0d46f4.js';\nimport './animation-eab5a4ca.js';\nvar menuIosCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{-webkit-transform:translateX(-9999px);transform:translateX(-9999px);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;top:0;bottom:0}:host(.menu-side-start) .menu-inner{inset-inline-start:0;inset-inline-end:auto}:host-context([dir=rtl]):host(.menu-side-start) .menu-inner,:host-context([dir=rtl]).menu-side-start .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}@supports selector(:dir(rtl)){:host(.menu-side-start:dir(rtl)) .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;top:0;bottom:0}:host(.menu-side-end) .menu-inner{inset-inline-start:auto;inset-inline-end:0}:host-context([dir=rtl]):host(.menu-side-end) .menu-inner,:host-context([dir=rtl]).menu-side-end .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}@supports selector(:dir(rtl)){:host(.menu-side-end:dir(rtl)) .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width, var(--width));min-width:var(--side-min-width, var(--min-width));max-width:var(--side-max-width, var(--max-width))}:host(.menu-pane-visible.split-pane-side){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none;box-shadow:none;z-index:0}:host(.menu-pane-visible.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}:host(.menu-pane-visible.split-pane-side){-ms-flex-order:-1;order:-1}:host(.menu-pane-visible.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none;transform:none;-webkit-box-shadow:none;box-shadow:none}:host(.menu-pane-visible) ion-backdrop{display:hidden !important}:host(.menu-pane-visible.split-pane-side){-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-pane-visible.split-pane-side[side=end]){-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\";\nvar IonMenuIosStyle0 = menuIosCss;\nvar menuMdCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{-webkit-transform:translateX(-9999px);transform:translateX(-9999px);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;top:0;bottom:0}:host(.menu-side-start) .menu-inner{inset-inline-start:0;inset-inline-end:auto}:host-context([dir=rtl]):host(.menu-side-start) .menu-inner,:host-context([dir=rtl]).menu-side-start .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}@supports selector(:dir(rtl)){:host(.menu-side-start:dir(rtl)) .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;top:0;bottom:0}:host(.menu-side-end) .menu-inner{inset-inline-start:auto;inset-inline-end:0}:host-context([dir=rtl]):host(.menu-side-end) .menu-inner,:host-context([dir=rtl]).menu-side-end .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}@supports selector(:dir(rtl)){:host(.menu-side-end:dir(rtl)) .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width, var(--width));min-width:var(--side-min-width, var(--min-width));max-width:var(--side-max-width, var(--max-width))}:host(.menu-pane-visible.split-pane-side){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none;box-shadow:none;z-index:0}:host(.menu-pane-visible.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}:host(.menu-pane-visible.split-pane-side){-ms-flex-order:-1;order:-1}:host(.menu-pane-visible.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none;transform:none;-webkit-box-shadow:none;box-shadow:none}:host(.menu-pane-visible) ion-backdrop{display:hidden !important}:host(.menu-pane-visible.split-pane-side){-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-pane-visible.split-pane-side[side=end]){-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18);box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18)}\";\nvar IonMenuMdStyle0 = menuMdCss;\nvar iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\nvar mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\nvar iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\nvar mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\n\nvar Menu = /*#__PURE__*/function () {\n  function Menu(hostRef) {\n    var _this = this;\n\n    _classCallCheck(this, Menu);\n\n    registerInstance(this, hostRef);\n    this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n    this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n    this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n    this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n    this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n    this.lastOnEnd = 0;\n    this.blocker = GESTURE_CONTROLLER.createBlocker({\n      disableScroll: true\n    });\n    this.didLoad = false;\n    /**\n     * Flag used to determine if an open/close\n     * operation was cancelled. For example, if\n     * an app calls \"menu.open\" then disables the menu\n     * part way through the animation, then this would\n     * be considered a cancelled operation.\n     */\n\n    this.operationCancelled = false;\n    this.isAnimating = false;\n    this._isOpen = false;\n    this.inheritedAttributes = {};\n\n    this.handleFocus = function (ev) {\n      /**\n       * Overlays have their own focus trapping listener\n       * so we do not want the two listeners to conflict\n       * with each other. If the top-most overlay that is\n       * open does not contain this ion-menu, then ion-menu's\n       * focus trapping should not run.\n       */\n      var lastOverlay = getPresentedOverlay(document);\n\n      if (lastOverlay && !lastOverlay.contains(_this.el)) {\n        return;\n      }\n\n      _this.trapKeyboardFocus(ev, document);\n    };\n\n    this.isPaneVisible = false;\n    this.isEndSide = false;\n    this.contentId = undefined;\n    this.menuId = undefined;\n    this.type = undefined;\n    this.disabled = false;\n    this.side = 'start';\n    this.swipeGesture = true;\n    this.maxEdgeStart = 50;\n  }\n\n  return _createClass(Menu, [{\n    key: \"typeChanged\",\n    value: function typeChanged(type, oldType) {\n      var contentEl = this.contentEl;\n\n      if (contentEl) {\n        if (oldType !== undefined) {\n          contentEl.classList.remove(\"menu-content-\".concat(oldType));\n        }\n\n        contentEl.classList.add(\"menu-content-\".concat(type));\n        contentEl.removeAttribute('style');\n      }\n\n      if (this.menuInnerEl) {\n        // Remove effects of previous animations\n        this.menuInnerEl.removeAttribute('style');\n      }\n\n      this.animation = undefined;\n    }\n  }, {\n    key: \"disabledChanged\",\n    value: function disabledChanged() {\n      this.updateState();\n      this.ionMenuChange.emit({\n        disabled: this.disabled,\n        open: this._isOpen\n      });\n    }\n  }, {\n    key: \"sideChanged\",\n    value: function sideChanged() {\n      this.isEndSide = isEndSide(this.side);\n      /**\n       * Menu direction animation is calculated based on the document direction.\n       * If the document direction changes, we need to create a new animation.\n       */\n\n      this.animation = undefined;\n    }\n  }, {\n    key: \"swipeGestureChanged\",\n    value: function swipeGestureChanged() {\n      this.updateState();\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function () {\n      var _connectedCallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this2 = this;\n\n        var content;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(typeof customElements !== 'undefined' && customElements != null)) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return customElements.whenDefined('ion-menu');\n\n            case 3:\n              if (this.type === undefined) {\n                this.type = config.get('menuType', 'overlay');\n              }\n\n              content = this.contentId !== undefined ? document.getElementById(this.contentId) : null;\n\n              if (!(content === null)) {\n                _context.next = 8;\n                break;\n              }\n\n              console.error('Menu: must have a \"content\" element to listen for drag events on.');\n              return _context.abrupt(\"return\");\n\n            case 8:\n              if (this.el.contains(content)) {\n                console.error(\"Menu: \\\"contentId\\\" should refer to the main view's ion-content, not the ion-content inside of the ion-menu.\");\n              }\n\n              this.contentEl = content; // add menu's content classes\n\n              content.classList.add('menu-content');\n              this.typeChanged(this.type, undefined);\n              this.sideChanged(); // register this menu with the app's menu controller\n\n              menuController._register(this);\n\n              this.menuChanged();\n              _context.next = 17;\n              return import('./index-39782642.js');\n\n            case 17:\n              this.gesture = _context.sent.createGesture({\n                el: document,\n                gestureName: 'menu-swipe',\n                gesturePriority: 30,\n                threshold: 10,\n                blurOnStart: true,\n                canStart: function canStart(ev) {\n                  return _this2.canStart(ev);\n                },\n                onWillStart: function onWillStart() {\n                  return _this2.onWillStart();\n                },\n                onStart: function onStart() {\n                  return _this2.onStart();\n                },\n                onMove: function onMove(ev) {\n                  return _this2.onMove(ev);\n                },\n                onEnd: function onEnd(ev) {\n                  return _this2.onEnd(ev);\n                }\n              });\n              this.updateState();\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n\n      function connectedCallback() {\n        return _connectedCallback.apply(this, arguments);\n      }\n\n      return connectedCallback;\n    }()\n  }, {\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n  }, {\n    key: \"componentDidLoad\",\n    value: function () {\n      var _componentDidLoad = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var splitPane;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              this.didLoad = true;\n              /**\n               * A menu inside of a split pane is assumed\n               * to be a side pane.\n               *\n               * When the menu is loaded it needs to\n               * see if it should be considered visible inside\n               * of the split pane. If the split pane is\n               * hidden then the menu should be too.\n               */\n\n              splitPane = this.el.closest('ion-split-pane');\n\n              if (!(splitPane !== null)) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 5;\n              return splitPane.isVisible();\n\n            case 5:\n              this.isPaneVisible = _context2.sent;\n\n            case 6:\n              this.menuChanged();\n              this.updateState();\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidLoad() {\n        return _componentDidLoad.apply(this, arguments);\n      }\n\n      return componentDidLoad;\n    }()\n  }, {\n    key: \"menuChanged\",\n    value: function menuChanged() {\n      /**\n       * Inform dependent components such as ion-menu-button\n       * that the menu is ready. Note that we only want to do this\n       * once the menu has been rendered which is why we check for didLoad.\n       */\n      if (this.didLoad) {\n        this.ionMenuChange.emit({\n          disabled: this.disabled,\n          open: this._isOpen\n        });\n      }\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function () {\n      var _disconnectedCallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.close(false);\n\n            case 2:\n              this.blocker.destroy();\n\n              menuController._unregister(this);\n\n              if (this.animation) {\n                this.animation.destroy();\n              }\n\n              if (this.gesture) {\n                this.gesture.destroy();\n                this.gesture = undefined;\n              }\n\n              this.animation = undefined;\n              this.contentEl = undefined;\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n\n      function disconnectedCallback() {\n        return _disconnectedCallback.apply(this, arguments);\n      }\n\n      return disconnectedCallback;\n    }()\n  }, {\n    key: \"onSplitPaneChanged\",\n    value: function onSplitPaneChanged(ev) {\n      var closestSplitPane = this.el.closest('ion-split-pane');\n\n      if (closestSplitPane !== null && closestSplitPane === ev.target) {\n        this.isPaneVisible = ev.detail.visible;\n        this.updateState();\n      }\n    }\n  }, {\n    key: \"onBackdropClick\",\n    value: function onBackdropClick(ev) {\n      // TODO(FW-2832): type (CustomEvent triggers errors which should be sorted)\n      if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n        var shouldClose = ev.composedPath ? !ev.composedPath().includes(this.menuInnerEl) : false;\n\n        if (shouldClose) {\n          ev.preventDefault();\n          ev.stopPropagation();\n          this.close();\n        }\n      }\n    }\n  }, {\n    key: \"onKeydown\",\n    value: function onKeydown(ev) {\n      if (ev.key === 'Escape') {\n        this.close();\n      }\n    }\n    /**\n     * Returns `true` is the menu is open.\n     */\n\n  }, {\n    key: \"isOpen\",\n    value: function isOpen() {\n      return Promise.resolve(this._isOpen);\n    }\n    /**\n     * Returns `true` is the menu is active.\n     *\n     * A menu is active when it can be opened or closed, meaning it's enabled\n     * and it's not part of a `ion-split-pane`.\n     */\n\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return Promise.resolve(this._isActive());\n    }\n    /**\n     * Opens the menu. If the menu is already open or it can't be opened,\n     * it returns `false`.\n     */\n\n  }, {\n    key: \"open\",\n    value: function open() {\n      var animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      return this.setOpen(true, animated);\n    }\n    /**\n     * Closes the menu. If the menu is already closed or it can't be closed,\n     * it returns `false`.\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      var animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      return this.setOpen(false, animated);\n    }\n    /**\n     * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      var animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      return this.setOpen(!this._isOpen, animated);\n    }\n    /**\n     * Opens or closes the button.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n\n  }, {\n    key: \"setOpen\",\n    value: function setOpen(shouldOpen) {\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      return menuController._setOpen(this, shouldOpen, animated);\n    }\n  }, {\n    key: \"trapKeyboardFocus\",\n    value: function trapKeyboardFocus(ev, doc) {\n      var target = ev.target;\n\n      if (!target) {\n        return;\n      }\n      /**\n       * If the target is inside the menu contents, let the browser\n       * focus as normal and keep a log of the last focused element.\n       */\n\n\n      if (this.el.contains(target)) {\n        this.lastFocus = target;\n      } else {\n        /**\n         * Otherwise, we are about to have focus go out of the menu.\n         * Wrap the focus to either the first or last element.\n         */\n        var el = this.el;\n        /**\n         * Once we call `focusFirstDescendant`, another focus event\n         * will fire, which will cause `lastFocus` to be updated\n         * before we can run the code after that. We cache the value\n         * here to avoid that.\n         */\n\n        focusFirstDescendant(el);\n        /**\n         * If the cached last focused element is the same as the now-\n         * active element, that means the user was on the first element\n         * already and pressed Shift + Tab, so we need to wrap to the\n         * last descendant.\n         */\n\n        if (this.lastFocus === doc.activeElement) {\n          focusLastDescendant(el);\n        }\n      }\n    }\n  }, {\n    key: \"_setOpen\",\n    value: function () {\n      var _setOpen2 = _asyncToGenerator(function (shouldOpen) {\n        var _this3 = this;\n\n        var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        return /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(!_this3._isActive() || _this3.isAnimating || shouldOpen === _this3._isOpen)) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", false);\n\n              case 2:\n                _this3.beforeAnimation(shouldOpen);\n\n                _context4.next = 5;\n                return _this3.loadAnimation();\n\n              case 5:\n                _context4.next = 7;\n                return _this3.startAnimation(shouldOpen, animated);\n\n              case 7:\n                if (!_this3.operationCancelled) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                _this3.operationCancelled = false;\n                return _context4.abrupt(\"return\", false);\n\n              case 10:\n                _this3.afterAnimation(shouldOpen);\n\n                return _context4.abrupt(\"return\", true);\n\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }, _callee4);\n        })();\n      });\n\n      function _setOpen(_x) {\n        return _setOpen2.apply(this, arguments);\n      }\n\n      return _setOpen;\n    }()\n  }, {\n    key: \"loadAnimation\",\n    value: function () {\n      var _loadAnimation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var width, isEndSide$1, animation;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              // Menu swipe animation takes the menu's inner width as parameter,\n              // If `offsetWidth` changes, we need to create a new animation.\n              width = this.menuInnerEl.offsetWidth;\n              /**\n               * Menu direction animation is calculated based on the document direction.\n               * If the document direction changes, we need to create a new animation.\n               */\n\n              isEndSide$1 = isEndSide(this.side);\n\n              if (!(width === this.width && this.animation !== undefined && isEndSide$1 === this.isEndSide)) {\n                _context5.next = 4;\n                break;\n              }\n\n              return _context5.abrupt(\"return\");\n\n            case 4:\n              this.width = width;\n              this.isEndSide = isEndSide$1; // Destroy existing animation\n\n              if (this.animation) {\n                this.animation.destroy();\n                this.animation = undefined;\n              } // Create new animation\n\n\n              _context5.next = 9;\n              return menuController._createAnimation(this.type, this);\n\n            case 9:\n              animation = this.animation = _context5.sent;\n\n              if (!config.getBoolean('animated', true)) {\n                animation.duration(0);\n              }\n\n              animation.fill('both');\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n\n      function loadAnimation() {\n        return _loadAnimation.apply(this, arguments);\n      }\n\n      return loadAnimation;\n    }()\n  }, {\n    key: \"startAnimation\",\n    value: function () {\n      var _startAnimation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(shouldOpen, animated) {\n        var isReversed, mode, easing, easingReverse, ani;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              isReversed = !shouldOpen;\n              mode = getIonMode(this);\n              easing = mode === 'ios' ? iosEasing : mdEasing;\n              easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\n              ani = this.animation.direction(isReversed ? 'reverse' : 'normal').easing(isReversed ? easingReverse : easing);\n\n              if (!animated) {\n                _context6.next = 10;\n                break;\n              }\n\n              _context6.next = 8;\n              return ani.play();\n\n            case 8:\n              _context6.next = 11;\n              break;\n\n            case 10:\n              ani.play({\n                sync: true\n              });\n\n            case 11:\n              /**\n               * We run this after the play invocation\n               * instead of using ani.onFinish so that\n               * multiple onFinish callbacks do not get\n               * run if an animation is played, stopped,\n               * and then played again.\n               */\n              if (ani.getDirection() === 'reverse') {\n                ani.direction('normal');\n              }\n\n            case 12:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n\n      function startAnimation(_x2, _x3) {\n        return _startAnimation.apply(this, arguments);\n      }\n\n      return startAnimation;\n    }()\n  }, {\n    key: \"_isActive\",\n    value: function _isActive() {\n      return !this.disabled && !this.isPaneVisible;\n    }\n  }, {\n    key: \"canSwipe\",\n    value: function canSwipe() {\n      return this.swipeGesture && !this.isAnimating && this._isActive();\n    }\n  }, {\n    key: \"canStart\",\n    value: function canStart(detail) {\n      // Do not allow swipe gesture if a modal is open\n      var isModalPresented = !!document.querySelector('ion-modal.show-modal');\n\n      if (isModalPresented || !this.canSwipe()) {\n        return false;\n      }\n\n      if (this._isOpen) {\n        return true;\n      } else if (menuController._getOpenSync()) {\n        return false;\n      }\n\n      return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n    }\n  }, {\n    key: \"onWillStart\",\n    value: function onWillStart() {\n      this.beforeAnimation(!this._isOpen);\n      return this.loadAnimation();\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart() {\n      if (!this.isAnimating || !this.animation) {\n        assert(false, 'isAnimating has to be true');\n        return;\n      } // the cloned animation should not use an easing curve during seek\n\n\n      this.animation.progressStart(true, this._isOpen ? 1 : 0);\n    }\n  }, {\n    key: \"onMove\",\n    value: function onMove(detail) {\n      if (!this.isAnimating || !this.animation) {\n        assert(false, 'isAnimating has to be true');\n        return;\n      }\n\n      var delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n      var stepValue = delta / this.width;\n      this.animation.progressStep(this._isOpen ? 1 - stepValue : stepValue);\n    }\n  }, {\n    key: \"onEnd\",\n    value: function onEnd(detail) {\n      var _this4 = this;\n\n      if (!this.isAnimating || !this.animation) {\n        assert(false, 'isAnimating has to be true');\n        return;\n      }\n\n      var isOpen = this._isOpen;\n      var isEndSide = this.isEndSide;\n      var delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n      var width = this.width;\n      var stepValue = delta / width;\n      var velocity = detail.velocityX;\n      var z = width / 2.0;\n      var shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n      var shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n      var shouldComplete = isOpen ? isEndSide ? shouldCompleteRight : shouldCompleteLeft : isEndSide ? shouldCompleteLeft : shouldCompleteRight;\n      var shouldOpen = !isOpen && shouldComplete;\n\n      if (isOpen && !shouldComplete) {\n        shouldOpen = true;\n      }\n\n      this.lastOnEnd = detail.currentTime; // Account for rounding errors in JS\n\n      var newStepValue = shouldComplete ? 0.001 : -0.001;\n      /**\n       * stepValue can sometimes return a negative\n       * value, but you can't have a negative time value\n       * for the cubic bezier curve (at least with web animations)\n       */\n\n      var adjustedStepValue = stepValue < 0 ? 0.01 : stepValue;\n      /**\n       * Animation will be reversed here, so need to\n       * reverse the easing curve as well\n       *\n       * Additionally, we need to account for the time relative\n       * to the new easing curve, as `stepValue` is going to be given\n       * in terms of a linear curve.\n       */\n\n      newStepValue += getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\n      var playTo = this._isOpen ? !shouldComplete : shouldComplete;\n      this.animation.easing('cubic-bezier(0.4, 0.0, 0.6, 1)').onFinish(function () {\n        return _this4.afterAnimation(shouldOpen);\n      }, {\n        oneTimeCallback: true\n      }).progressEnd(playTo ? 1 : 0, this._isOpen ? 1 - newStepValue : newStepValue, 300);\n    }\n  }, {\n    key: \"beforeAnimation\",\n    value: function beforeAnimation(shouldOpen) {\n      assert(!this.isAnimating, '_before() should not be called while animating'); // this places the menu into the correct location before it animates in\n      // this css class doesn't actually kick off any animations\n\n      this.el.classList.add(SHOW_MENU);\n      /**\n       * We add a tabindex here so that focus trapping\n       * still works even if the menu does not have\n       * any focusable elements slotted inside. The\n       * focus trapping utility will fallback to focusing\n       * the menu so focus does not leave when the menu\n       * is open.\n       */\n\n      this.el.setAttribute('tabindex', '0');\n\n      if (this.backdropEl) {\n        this.backdropEl.classList.add(SHOW_BACKDROP);\n      } // add css class and hide content behind menu from screen readers\n\n\n      if (this.contentEl) {\n        this.contentEl.classList.add(MENU_CONTENT_OPEN);\n        /**\n         * When the menu is open and overlaying the main\n         * content, the main content should not be announced\n         * by the screenreader as the menu is the main\n         * focus. This is useful with screenreaders that have\n         * \"read from top\" gestures that read the entire\n         * page from top to bottom when activated.\n         * This should be done before the animation starts\n         * so that users cannot accidentally scroll\n         * the content while dragging a menu open.\n         */\n\n        this.contentEl.setAttribute('aria-hidden', 'true');\n      }\n\n      this.blocker.block();\n      this.isAnimating = true;\n\n      if (shouldOpen) {\n        this.ionWillOpen.emit();\n      } else {\n        this.ionWillClose.emit();\n      }\n    }\n  }, {\n    key: \"afterAnimation\",\n    value: function afterAnimation(isOpen) {\n      var _a; // keep opening/closing the menu disabled for a touch more yet\n      // only add listeners/css if it's enabled and isOpen\n      // and only remove listeners/css if it's not open\n      // emit opened/closed events\n\n\n      this._isOpen = isOpen;\n      this.isAnimating = false;\n\n      if (!this._isOpen) {\n        this.blocker.unblock();\n      }\n\n      if (isOpen) {\n        // emit open event\n        this.ionDidOpen.emit();\n        /**\n         * Move focus to the menu to prepare focus trapping, as long as\n         * it isn't already focused. Use the host element instead of the\n         * first descendant to avoid the scroll position jumping around.\n         */\n\n        var focusedMenu = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.closest('ion-menu');\n\n        if (focusedMenu !== this.el) {\n          this.el.focus();\n        } // start focus trapping\n\n\n        document.addEventListener('focus', this.handleFocus, true);\n      } else {\n        // remove css classes and unhide content from screen readers\n        this.el.classList.remove(SHOW_MENU);\n        /**\n         * Remove tabindex from the menu component\n         * so that is cannot be tabbed to.\n         */\n\n        this.el.removeAttribute('tabindex');\n\n        if (this.contentEl) {\n          this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n          /**\n           * Remove aria-hidden so screen readers\n           * can announce the main content again\n           * now that the menu is not the main focus.\n           */\n\n          this.contentEl.removeAttribute('aria-hidden');\n        }\n\n        if (this.backdropEl) {\n          this.backdropEl.classList.remove(SHOW_BACKDROP);\n        }\n\n        if (this.animation) {\n          this.animation.stop();\n        } // emit close event\n\n\n        this.ionDidClose.emit(); // undo focus trapping so multiple menus don't collide\n\n        document.removeEventListener('focus', this.handleFocus, true);\n      }\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState() {\n      var isActive = this._isActive();\n\n      if (this.gesture) {\n        this.gesture.enable(isActive && this.swipeGesture);\n      }\n      /**\n       * If the menu is disabled but it is still open\n       * then we should close the menu immediately.\n       * Additionally, if the menu is in the process\n       * of animating {open, close} and the menu is disabled\n       * then it should still be closed immediately.\n       */\n\n\n      if (!isActive) {\n        /**\n         * It is possible to disable the menu while\n         * it is mid-animation. When this happens, we\n         * need to set the operationCancelled flag\n         * so that this._setOpen knows to return false\n         * and not run the \"afterAnimation\" callback.\n         */\n        if (this.isAnimating) {\n          this.operationCancelled = true;\n        }\n        /**\n         * If the menu is disabled then we should\n         * forcibly close the menu even if it is open.\n         */\n\n\n        this.afterAnimation(false);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var type = this.type,\n          disabled = this.disabled,\n          el = this.el,\n          isPaneVisible = this.isPaneVisible,\n          inheritedAttributes = this.inheritedAttributes,\n          side = this.side;\n      var mode = getIonMode(this);\n      /**\n       * If the Close Watcher is enabled then\n       * the ionBackButton listener in the menu controller\n       * will handle closing the menu when Escape is pressed.\n       */\n\n      return h(Host, {\n        key: '30c0c9bfb8973e4a6feb658f8c4ee8e362f464ed',\n        onKeyDown: shouldUseCloseWatcher() ? null : this.onKeydown,\n        role: \"navigation\",\n        \"aria-label\": inheritedAttributes['aria-label'] || 'menu',\n        class: _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, mode, true), \"menu-type-\".concat(type), true), 'menu-enabled', !disabled), \"menu-side-\".concat(side), true), 'menu-pane-visible', isPaneVisible), 'split-pane-side', hostContext('ion-split-pane', el))\n      }, h(\"div\", {\n        key: '34b0e5840906862cf1bc27207e089004b0402c56',\n        class: \"menu-inner\",\n        part: \"container\",\n        ref: function ref(el) {\n          return _this5.menuInnerEl = el;\n        }\n      }, h(\"slot\", {\n        key: '2cd7e61a8c0987ca4b3f1f8b33cba7152f1275fe'\n      })), h(\"ion-backdrop\", {\n        key: 'd190b1f9b66c76e276f27bfe074d3aab796180fb',\n        ref: function ref(el) {\n          return _this5.backdropEl = el;\n        },\n        class: \"menu-backdrop\",\n        tappable: false,\n        stopPropagation: false,\n        part: \"backdrop\"\n      }));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"type\": [\"typeChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"side\": [\"sideChanged\"],\n        \"swipeGesture\": [\"swipeGestureChanged\"]\n      };\n    }\n  }]);\n}();\n\nvar computeDelta = function computeDelta(deltaX, isOpen, isEndSide) {\n  return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\n\nvar checkEdgeSide = function checkEdgeSide(win, posX, isEndSide, maxEdgeStart) {\n  if (isEndSide) {\n    return posX >= win.innerWidth - maxEdgeStart;\n  } else {\n    return posX <= maxEdgeStart;\n  }\n};\n\nvar SHOW_MENU = 'show-menu';\nvar SHOW_BACKDROP = 'show-backdrop';\nvar MENU_CONTENT_OPEN = 'menu-content-open';\nMenu.style = {\n  ios: IonMenuIosStyle0,\n  md: IonMenuMdStyle0\n}; // Given a menu, return whether or not the menu toggle should be visible\n\nvar updateVisibility = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(menu) {\n    var menuEl;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return menuController.get(menu);\n\n        case 2:\n          menuEl = _context7.sent;\n          _context7.t0 = menuEl;\n\n          if (!_context7.t0) {\n            _context7.next = 8;\n            break;\n          }\n\n          _context7.next = 7;\n          return menuEl.isActive();\n\n        case 7:\n          _context7.t0 = _context7.sent;\n\n        case 8:\n          return _context7.abrupt(\"return\", !!_context7.t0);\n\n        case 9:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }));\n\n  return function updateVisibility(_x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar menuButtonIosCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.1;--border-radius:4px;--color:var(--ion-color-primary, #0054e9);--padding-start:5px;--padding-end:5px;min-height:32px;font-size:clamp(31px, 1.9375rem, 38.13px)}:host(.ion-activated){opacity:0.4}@media (any-hover: hover){:host(:hover){opacity:0.6}}\";\nvar IonMenuButtonIosStyle0 = menuButtonIosCss;\nvar menuButtonMdCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.12;--background-hover:currentColor;--background-hover-opacity:.04;--border-radius:50%;--color:initial;--padding-start:8px;--padding-end:8px;width:3rem;height:3rem;font-size:1.5rem}:host(.ion-color.ion-focused)::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.ion-color:hover) .button-native::after{background:var(--ion-color-base)}}\";\nvar IonMenuButtonMdStyle0 = menuButtonMdCss;\n\nvar MenuButton = /*#__PURE__*/function () {\n  function MenuButton(hostRef) {\n    var _this6 = this;\n\n    _classCallCheck(this, MenuButton);\n\n    registerInstance(this, hostRef);\n    this.inheritedAttributes = {};\n    this.onClick = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            return _context8.abrupt(\"return\", menuController.toggle(_this6.menu));\n\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, _callee8);\n    }));\n    this.visible = false;\n    this.color = undefined;\n    this.disabled = false;\n    this.menu = undefined;\n    this.autoHide = true;\n    this.type = 'button';\n  }\n\n  return _createClass(MenuButton, [{\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n  }, {\n    key: \"componentDidLoad\",\n    value: function componentDidLoad() {\n      this.visibilityChanged();\n    }\n  }, {\n    key: \"visibilityChanged\",\n    value: function () {\n      var _visibilityChanged = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return updateVisibility(this.menu);\n\n            case 2:\n              this.visible = _context9.sent;\n\n            case 3:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n\n      function visibilityChanged() {\n        return _visibilityChanged.apply(this, arguments);\n      }\n\n      return visibilityChanged;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var color = this.color,\n          disabled = this.disabled,\n          inheritedAttributes = this.inheritedAttributes;\n      var mode = getIonMode(this);\n      var menuIcon = config.get('menuIcon', mode === 'ios' ? menuOutline : menuSharp);\n      var hidden = this.autoHide && !this.visible;\n      var attrs = {\n        type: this.type\n      };\n      var ariaLabel = inheritedAttributes['aria-label'] || 'menu';\n      return h(Host, {\n        key: '95a8b9f09c7fae9713a8dc003ed277f6f31403da',\n        onClick: this.onClick,\n        \"aria-disabled\": disabled ? 'true' : null,\n        \"aria-hidden\": hidden ? 'true' : null,\n        class: createColorClasses(color, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, mode, true), \"button\", true), 'menu-button-hidden', hidden), 'menu-button-disabled', disabled), 'in-toolbar', hostContext('ion-toolbar', this.el)), 'in-toolbar-color', hostContext('ion-toolbar[color]', this.el)), 'ion-activatable', true), 'ion-focusable', true))\n      }, h(\"button\", Object.assign({\n        key: '39f3ce20c400d2fac4890a042e8e44426709fca5'\n      }, attrs, {\n        disabled: disabled,\n        class: \"button-native\",\n        part: \"native\",\n        \"aria-label\": ariaLabel\n      }), h(\"span\", {\n        key: '310978dc1cdef668de6720cde2a2304253679176',\n        class: \"button-inner\"\n      }, h(\"slot\", {\n        key: '2a2b9de524c1fc3c526fe9559cb077b976852725'\n      }, h(\"ion-icon\", {\n        key: '9c22d7ea9fc3d76c32ec1c1b4b13d982c60b8c2d',\n        part: \"icon\",\n        icon: menuIcon,\n        mode: mode,\n        lazy: false,\n        \"aria-hidden\": \"true\"\n      }))), mode === 'md' && h(\"ion-ripple-effect\", {\n        key: 'c58c9e29c763070383472f65a9d322a684bcb564',\n        type: \"unbounded\"\n      })));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }]);\n}();\n\nMenuButton.style = {\n  ios: IonMenuButtonIosStyle0,\n  md: IonMenuButtonMdStyle0\n};\nvar menuToggleCss = \":host(.menu-toggle-hidden){display:none}\";\nvar IonMenuToggleStyle0 = menuToggleCss;\n\nvar MenuToggle = /*#__PURE__*/function () {\n  function MenuToggle(hostRef) {\n    var _this7 = this;\n\n    _classCallCheck(this, MenuToggle);\n\n    registerInstance(this, hostRef);\n\n    this.onClick = function () {\n      return menuController.toggle(_this7.menu);\n    };\n\n    this.visible = false;\n    this.menu = undefined;\n    this.autoHide = true;\n  }\n\n  return _createClass(MenuToggle, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.visibilityChanged();\n    }\n  }, {\n    key: \"visibilityChanged\",\n    value: function () {\n      var _visibilityChanged2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return updateVisibility(this.menu);\n\n            case 2:\n              this.visible = _context10.sent;\n\n            case 3:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n\n      function visibilityChanged() {\n        return _visibilityChanged2.apply(this, arguments);\n      }\n\n      return visibilityChanged;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var mode = getIonMode(this);\n      var hidden = this.autoHide && !this.visible;\n      return h(Host, {\n        key: '90e621f09792383f1badcc1b402b1ac7d08c5f98',\n        onClick: this.onClick,\n        \"aria-hidden\": hidden ? 'true' : null,\n        class: _defineProperty(_defineProperty({}, mode, true), 'menu-toggle-hidden', hidden)\n      }, h(\"slot\", {\n        key: 'c0abdd1d91e9d80ee3704e3e374ebe1f29078460'\n      }));\n    }\n  }]);\n}();\n\nMenuToggle.style = IonMenuToggleStyle0;\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuToggle as ion_menu_toggle };","map":null,"metadata":{},"sourceType":"module"}