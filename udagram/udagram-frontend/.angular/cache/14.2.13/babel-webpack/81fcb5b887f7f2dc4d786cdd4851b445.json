{"ast":null,"code":"import _toConsumableArray from \"D:/Udemy/Hosting AWS/Udagram/nd0067-c4-deployment-process-project-starter-online/udagram/udagram-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"D:/Udemy/Hosting AWS/Udagram/nd0067-c4-deployment-process-project-starter-online/udagram/udagram-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"D:/Udemy/Hosting AWS/Udagram/nd0067-c4-deployment-process-project-starter-online/udagram/udagram-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Udemy/Hosting AWS/Udagram/nd0067-c4-deployment-process-project-starter-online/udagram/udagram-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { __awaiter } from \"tslib\";\nimport { FeedItem } from '../models/feed-item.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { ApiService } from '../../api/api.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../api/api.service\";\nexport var FeedProviderService = /*#__PURE__*/(function () {\n  var FeedProviderService = /*#__PURE__*/function () {\n    function FeedProviderService(api) {\n      _classCallCheck(this, FeedProviderService);\n\n      this.api = api;\n      this.currentFeed$ = new BehaviorSubject([]);\n    }\n\n    return _createClass(FeedProviderService, [{\n      key: \"getFeed\",\n      value: function getFeed() {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var req, items;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.api.get('/feed');\n\n              case 2:\n                req = _context.sent;\n                items = req.rows;\n                this.currentFeed$.next(items);\n                return _context.abrupt(\"return\", Promise.resolve(this.currentFeed$));\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n      }\n    }, {\n      key: \"uploadFeedItem\",\n      value: function uploadFeedItem(caption, file) {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          var res, feed;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.api.upload('/feed', file, {\n                  caption: caption,\n                  url: file.name\n                });\n\n              case 2:\n                res = _context2.sent;\n                feed = [res].concat(_toConsumableArray(this.currentFeed$.value));\n                this.currentFeed$.next(feed);\n                return _context2.abrupt(\"return\", res);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this);\n        }));\n      }\n    }]);\n  }();\n\n  FeedProviderService.ɵfac = function FeedProviderService_Factory(t) {\n    return new (t || FeedProviderService)(i0.ɵɵinject(i1.ApiService));\n  };\n\n  FeedProviderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FeedProviderService,\n    factory: FeedProviderService.ɵfac,\n    providedIn: 'root'\n  });\n  return FeedProviderService;\n})();","map":null,"metadata":{},"sourceType":"module"}