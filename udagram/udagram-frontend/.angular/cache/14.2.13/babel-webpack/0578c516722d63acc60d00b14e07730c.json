{"ast":null,"code":"import _defineProperty from \"D:/Udemy/Hosting AWS/Udagram/nd0067-c4-deployment-process-project-starter-online/udagram/udagram-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _createForOfIteratorHelper from \"D:/Udemy/Hosting AWS/Udagram/nd0067-c4-deployment-process-project-starter-online/udagram/udagram-frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { c as createAnimation } from './animation.js';\nimport { g as getIonPageElement } from './index2.js';\nvar DURATION = 540; // TODO(FW-2832): types\n\nvar getClonedElement = function getClonedElement(tagName) {\n  return document.querySelector(\"\".concat(tagName, \".ion-cloned-element\"));\n};\n\nvar shadow = function shadow(el) {\n  return el.shadowRoot || el;\n};\n\nvar getLargeTitle = function getLargeTitle(refEl) {\n  var tabs = refEl.tagName === 'ION-TABS' ? refEl : refEl.querySelector('ion-tabs');\n  var query = 'ion-content ion-header:not(.header-collapse-condense-inactive) ion-title.title-large';\n\n  if (tabs != null) {\n    var activeTab = tabs.querySelector('ion-tab:not(.tab-hidden), .ion-page:not(.ion-page-hidden)');\n    return activeTab != null ? activeTab.querySelector(query) : null;\n  }\n\n  return refEl.querySelector(query);\n};\n\nvar getBackButton = function getBackButton(refEl, backDirection) {\n  var tabs = refEl.tagName === 'ION-TABS' ? refEl : refEl.querySelector('ion-tabs');\n  var buttonsList = [];\n\n  if (tabs != null) {\n    var activeTab = tabs.querySelector('ion-tab:not(.tab-hidden), .ion-page:not(.ion-page-hidden)');\n\n    if (activeTab != null) {\n      buttonsList = activeTab.querySelectorAll('ion-buttons');\n    }\n  } else {\n    buttonsList = refEl.querySelectorAll('ion-buttons');\n  }\n\n  var _iterator = _createForOfIteratorHelper(buttonsList),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var buttons = _step.value;\n      var parentHeader = buttons.closest('ion-header');\n      var activeHeader = parentHeader && !parentHeader.classList.contains('header-collapse-condense-inactive');\n      var backButton = buttons.querySelector('ion-back-button');\n      var buttonsCollapse = buttons.classList.contains('buttons-collapse');\n      var startSlot = buttons.slot === 'start' || buttons.slot === '';\n\n      if (backButton !== null && startSlot && (buttonsCollapse && activeHeader && backDirection || !buttonsCollapse)) {\n        return backButton;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return null;\n};\n\nvar createLargeTitleTransition = function createLargeTitleTransition(rootAnimation, rtl, backDirection, enteringEl, leavingEl) {\n  var enteringBackButton = getBackButton(enteringEl, backDirection);\n  var leavingLargeTitle = getLargeTitle(leavingEl);\n  var enteringLargeTitle = getLargeTitle(enteringEl);\n  var leavingBackButton = getBackButton(leavingEl, backDirection);\n  var shouldAnimationForward = enteringBackButton !== null && leavingLargeTitle !== null && !backDirection;\n  var shouldAnimationBackward = enteringLargeTitle !== null && leavingBackButton !== null && backDirection;\n\n  if (shouldAnimationForward) {\n    var leavingLargeTitleBox = leavingLargeTitle.getBoundingClientRect();\n    var enteringBackButtonBox = enteringBackButton.getBoundingClientRect();\n    var enteringBackButtonTextEl = shadow(enteringBackButton).querySelector('.button-text'); // Text element not rendered if developers pass text=\"\" to the back button\n\n    var enteringBackButtonTextBox = enteringBackButtonTextEl === null || enteringBackButtonTextEl === void 0 ? void 0 : enteringBackButtonTextEl.getBoundingClientRect();\n    var leavingLargeTitleTextEl = shadow(leavingLargeTitle).querySelector('.toolbar-title');\n    var leavingLargeTitleTextBox = leavingLargeTitleTextEl.getBoundingClientRect();\n    animateLargeTitle(rootAnimation, rtl, backDirection, leavingLargeTitle, leavingLargeTitleBox, leavingLargeTitleTextBox, enteringBackButtonBox, enteringBackButtonTextEl, enteringBackButtonTextBox);\n    animateBackButton(rootAnimation, rtl, backDirection, enteringBackButton, enteringBackButtonBox, enteringBackButtonTextEl, enteringBackButtonTextBox, leavingLargeTitle, leavingLargeTitleTextBox);\n  } else if (shouldAnimationBackward) {\n    var enteringLargeTitleBox = enteringLargeTitle.getBoundingClientRect();\n    var leavingBackButtonBox = leavingBackButton.getBoundingClientRect();\n    var leavingBackButtonTextEl = shadow(leavingBackButton).querySelector('.button-text'); // Text element not rendered if developers pass text=\"\" to the back button\n\n    var leavingBackButtonTextBox = leavingBackButtonTextEl === null || leavingBackButtonTextEl === void 0 ? void 0 : leavingBackButtonTextEl.getBoundingClientRect();\n    var enteringLargeTitleTextEl = shadow(enteringLargeTitle).querySelector('.toolbar-title');\n    var enteringLargeTitleTextBox = enteringLargeTitleTextEl.getBoundingClientRect();\n    animateLargeTitle(rootAnimation, rtl, backDirection, enteringLargeTitle, enteringLargeTitleBox, enteringLargeTitleTextBox, leavingBackButtonBox, leavingBackButtonTextEl, leavingBackButtonTextBox);\n    animateBackButton(rootAnimation, rtl, backDirection, leavingBackButton, leavingBackButtonBox, leavingBackButtonTextEl, leavingBackButtonTextBox, enteringLargeTitle, enteringLargeTitleTextBox);\n  }\n\n  return {\n    forward: shouldAnimationForward,\n    backward: shouldAnimationBackward\n  };\n};\n\nvar animateBackButton = function animateBackButton(rootAnimation, rtl, backDirection, backButtonEl, backButtonBox, backButtonTextEl, backButtonTextBox, largeTitleEl, largeTitleTextBox) {\n  var _a, _b;\n\n  var BACK_BUTTON_START_OFFSET = rtl ? \"calc(100% - \".concat(backButtonBox.right + 4, \"px)\") : \"\".concat(backButtonBox.left - 4, \"px\");\n  var TEXT_ORIGIN_X = rtl ? 'right' : 'left';\n  var ICON_ORIGIN_X = rtl ? 'left' : 'right';\n  var CONTAINER_ORIGIN_X = rtl ? 'right' : 'left';\n  var WIDTH_SCALE = 1;\n  var HEIGHT_SCALE = 1;\n  var TEXT_START_SCALE = \"scale(\".concat(HEIGHT_SCALE, \")\");\n  var TEXT_END_SCALE = 'scale(1)';\n\n  if (backButtonTextEl && backButtonTextBox) {\n    /**\n     * When the title and back button texts match then they should overlap during the\n     * page transition. If the texts do not match up then the back button text scale\n     * adjusts to not perfectly match the large title text otherwise the proportions\n     * will be incorrect. When the texts match we scale both the width and height to\n     * account for font weight differences between the title and back button.\n     */\n    var doTitleAndButtonTextsMatch = ((_a = backButtonTextEl.textContent) === null || _a === void 0 ? void 0 : _a.trim()) === ((_b = largeTitleEl.textContent) === null || _b === void 0 ? void 0 : _b.trim());\n    WIDTH_SCALE = largeTitleTextBox.width / backButtonTextBox.width;\n    /**\n     * Subtract an offset to account for slight sizing/padding differences between the\n     * title and the back button.\n     */\n\n    HEIGHT_SCALE = (largeTitleTextBox.height - LARGE_TITLE_SIZE_OFFSET) / backButtonTextBox.height;\n    /**\n     * Even though we set TEXT_START_SCALE to HEIGHT_SCALE above, we potentially need\n     * to re-compute this here since the HEIGHT_SCALE may have changed.\n     */\n\n    TEXT_START_SCALE = doTitleAndButtonTextsMatch ? \"scale(\".concat(WIDTH_SCALE, \", \").concat(HEIGHT_SCALE, \")\") : \"scale(\".concat(HEIGHT_SCALE, \")\");\n  }\n\n  var backButtonIconEl = shadow(backButtonEl).querySelector('ion-icon');\n  var backButtonIconBox = backButtonIconEl.getBoundingClientRect();\n  /**\n   * We need to offset the container by the icon dimensions\n   * so that the back button text aligns with the large title\n   * text. Otherwise, the back button icon will align with the\n   * large title text but the back button text will not.\n   */\n\n  var CONTAINER_START_TRANSLATE_X = rtl ? \"\".concat(backButtonIconBox.width / 2 - (backButtonIconBox.right - backButtonBox.right), \"px\") : \"\".concat(backButtonBox.left - backButtonIconBox.width / 2, \"px\");\n  var CONTAINER_END_TRANSLATE_X = rtl ? \"-\".concat(window.innerWidth - backButtonBox.right, \"px\") : \"\".concat(backButtonBox.left, \"px\");\n  /**\n   * Back button container should be\n   * aligned to the top of the title container\n   * so the texts overlap as the back button\n   * text begins to fade in.\n   */\n\n  var CONTAINER_START_TRANSLATE_Y = \"\".concat(largeTitleTextBox.top, \"px\");\n  /**\n   * The cloned back button should align exactly with the\n   * real back button on the entering page otherwise there will\n   * be a layout shift.\n   */\n\n  var CONTAINER_END_TRANSLATE_Y = \"\".concat(backButtonBox.top, \"px\");\n  /**\n   * In the forward direction, the cloned back button\n   * container should translate from over the large title\n   * to over the back button. In the backward direction,\n   * it should translate from over the back button to over\n   * the large title.\n   */\n\n  var FORWARD_CONTAINER_KEYFRAMES = [{\n    offset: 0,\n    transform: \"translate3d(\".concat(CONTAINER_START_TRANSLATE_X, \", \").concat(CONTAINER_START_TRANSLATE_Y, \", 0)\")\n  }, {\n    offset: 1,\n    transform: \"translate3d(\".concat(CONTAINER_END_TRANSLATE_X, \", \").concat(CONTAINER_END_TRANSLATE_Y, \", 0)\")\n  }];\n  var BACKWARD_CONTAINER_KEYFRAMES = [{\n    offset: 0,\n    transform: \"translate3d(\".concat(CONTAINER_END_TRANSLATE_X, \", \").concat(CONTAINER_END_TRANSLATE_Y, \", 0)\")\n  }, {\n    offset: 1,\n    transform: \"translate3d(\".concat(CONTAINER_START_TRANSLATE_X, \", \").concat(CONTAINER_START_TRANSLATE_Y, \", 0)\")\n  }];\n  var CONTAINER_KEYFRAMES = backDirection ? BACKWARD_CONTAINER_KEYFRAMES : FORWARD_CONTAINER_KEYFRAMES;\n  /**\n   * In the forward direction, the text in the cloned back button\n   * should start to be (roughly) the size of the large title\n   * and then scale down to be the size of the actual back button.\n   * The text should also translate, but that translate is handled\n   * by the container keyframes.\n   */\n\n  var FORWARD_TEXT_KEYFRAMES = [{\n    offset: 0,\n    opacity: 0,\n    transform: TEXT_START_SCALE\n  }, {\n    offset: 1,\n    opacity: 1,\n    transform: TEXT_END_SCALE\n  }];\n  var BACKWARD_TEXT_KEYFRAMES = [{\n    offset: 0,\n    opacity: 1,\n    transform: TEXT_END_SCALE\n  }, {\n    offset: 1,\n    opacity: 0,\n    transform: TEXT_START_SCALE\n  }];\n  var TEXT_KEYFRAMES = backDirection ? BACKWARD_TEXT_KEYFRAMES : FORWARD_TEXT_KEYFRAMES;\n  /**\n   * The icon should scale in/out in the second\n   * half of the animation. The icon should also\n   * translate, but that translate is handled by the\n   * container keyframes.\n   */\n\n  var FORWARD_ICON_KEYFRAMES = [{\n    offset: 0,\n    opacity: 0,\n    transform: 'scale(0.6)'\n  }, {\n    offset: 0.6,\n    opacity: 0,\n    transform: 'scale(0.6)'\n  }, {\n    offset: 1,\n    opacity: 1,\n    transform: 'scale(1)'\n  }];\n  var BACKWARD_ICON_KEYFRAMES = [{\n    offset: 0,\n    opacity: 1,\n    transform: 'scale(1)'\n  }, {\n    offset: 0.2,\n    opacity: 0,\n    transform: 'scale(0.6)'\n  }, {\n    offset: 1,\n    opacity: 0,\n    transform: 'scale(0.6)'\n  }];\n  var ICON_KEYFRAMES = backDirection ? BACKWARD_ICON_KEYFRAMES : FORWARD_ICON_KEYFRAMES;\n  var enteringBackButtonTextAnimation = createAnimation();\n  var enteringBackButtonIconAnimation = createAnimation();\n  var enteringBackButtonAnimation = createAnimation();\n  var clonedBackButtonEl = getClonedElement('ion-back-button');\n  var clonedBackButtonTextEl = shadow(clonedBackButtonEl).querySelector('.button-text');\n  var clonedBackButtonIconEl = shadow(clonedBackButtonEl).querySelector('ion-icon');\n  clonedBackButtonEl.text = backButtonEl.text;\n  clonedBackButtonEl.mode = backButtonEl.mode;\n  clonedBackButtonEl.icon = backButtonEl.icon;\n  clonedBackButtonEl.color = backButtonEl.color;\n  clonedBackButtonEl.disabled = backButtonEl.disabled;\n  clonedBackButtonEl.style.setProperty('display', 'block');\n  clonedBackButtonEl.style.setProperty('position', 'fixed');\n  enteringBackButtonIconAnimation.addElement(clonedBackButtonIconEl);\n  enteringBackButtonTextAnimation.addElement(clonedBackButtonTextEl);\n  enteringBackButtonAnimation.addElement(clonedBackButtonEl);\n  enteringBackButtonAnimation.beforeStyles(_defineProperty({\n    position: 'absolute',\n    top: '0px'\n  }, CONTAINER_ORIGIN_X, '0px'))\n  /**\n   * The write hooks must be set on this animation as it is guaranteed to run. Other\n   * animations such as the back button text animation will not run if the back button\n   * has no visible text.\n   */\n  .beforeAddWrite(function () {\n    backButtonEl.style.setProperty('display', 'none');\n    clonedBackButtonEl.style.setProperty(TEXT_ORIGIN_X, BACK_BUTTON_START_OFFSET);\n  }).afterAddWrite(function () {\n    backButtonEl.style.setProperty('display', '');\n    clonedBackButtonEl.style.setProperty('display', 'none');\n    clonedBackButtonEl.style.removeProperty(TEXT_ORIGIN_X);\n  }).keyframes(CONTAINER_KEYFRAMES);\n  enteringBackButtonTextAnimation.beforeStyles({\n    'transform-origin': \"\".concat(TEXT_ORIGIN_X, \" top\")\n  }).keyframes(TEXT_KEYFRAMES);\n  enteringBackButtonIconAnimation.beforeStyles({\n    'transform-origin': \"\".concat(ICON_ORIGIN_X, \" center\")\n  }).keyframes(ICON_KEYFRAMES);\n  rootAnimation.addAnimation([enteringBackButtonTextAnimation, enteringBackButtonIconAnimation, enteringBackButtonAnimation]);\n};\n\nvar animateLargeTitle = function animateLargeTitle(rootAnimation, rtl, backDirection, largeTitleEl, largeTitleBox, largeTitleTextBox, backButtonBox, backButtonTextEl, backButtonTextBox) {\n  var _a, _b;\n  /**\n   * The horizontal transform origin for the large title\n   */\n\n\n  var ORIGIN_X = rtl ? 'right' : 'left';\n  var TITLE_START_OFFSET = rtl ? \"calc(100% - \".concat(largeTitleBox.right, \"px)\") : \"\".concat(largeTitleBox.left, \"px\");\n  /**\n   * The cloned large should align exactly with the\n   * real large title on the leaving page otherwise there will\n   * be a layout shift.\n   */\n\n  var START_TRANSLATE_X = '0px';\n  var START_TRANSLATE_Y = \"\".concat(largeTitleBox.top, \"px\");\n  /**\n   * How much to offset the large title translation by.\n   * This accounts for differences in sizing between the large\n   * title and the back button due to padding and font weight.\n   */\n\n  var LARGE_TITLE_TRANSLATION_OFFSET = 8;\n  var END_TRANSLATE_X = rtl ? \"-\".concat(window.innerWidth - backButtonBox.right - LARGE_TITLE_TRANSLATION_OFFSET, \"px\") : \"\".concat(backButtonBox.x + LARGE_TITLE_TRANSLATION_OFFSET, \"px\");\n  /**\n   * How much to scale the large title up/down by.\n   */\n\n  var HEIGHT_SCALE = 0.5;\n  /**\n   * The large title always starts full size.\n   */\n\n  var START_SCALE = 'scale(1)';\n  /**\n   * By default, we don't worry about having the large title scaled to perfectly\n   * match the back button because we don't know if the back button's text matches\n   * the large title's text.\n   */\n\n  var END_SCALE = \"scale(\".concat(HEIGHT_SCALE, \")\"); // Text element not rendered if developers pass text=\"\" to the back button\n\n  if (backButtonTextEl && backButtonTextBox) {\n    /**\n     * The scaled title should (roughly) overlap the back button. This ensures that\n     * the back button and title overlap during the animation. Note that since both\n     * elements either fade in or fade out over the course of the animation, neither\n     * element will be fully visible on top of the other. As a result, the overlap\n     * does not need to be perfect, so approximate values are acceptable here.\n     */\n    END_TRANSLATE_X = rtl ? \"-\".concat(window.innerWidth - backButtonTextBox.right - LARGE_TITLE_TRANSLATION_OFFSET, \"px\") : \"\".concat(backButtonTextBox.x - LARGE_TITLE_TRANSLATION_OFFSET, \"px\");\n    /**\n     * In the forward direction, the large title should start at its normal size and\n     * then scale down to be (roughly) the size of the back button on the other view.\n     * In the backward direction, the large title should start at (roughly) the size\n     * of the back button and then scale up to its original size.\n     * Note that since both elements either fade in or fade out over the course of the\n     * animation, neither element will be fully visible on top of the other. As a result,\n     * the overlap  does not need to be perfect, so approximate values are acceptable here.\n     */\n\n    /**\n     * When the title and back button texts match then they should overlap during the\n     * page transition. If the texts do not match up then the large title text scale\n     * adjusts to not perfectly match the back button text otherwise the proportions\n     * will be incorrect. When the texts match we scale both the width and height to\n     * account for font weight differences between the title and back button.\n     */\n\n    var doTitleAndButtonTextsMatch = ((_a = backButtonTextEl.textContent) === null || _a === void 0 ? void 0 : _a.trim()) === ((_b = largeTitleEl.textContent) === null || _b === void 0 ? void 0 : _b.trim());\n    var WIDTH_SCALE = backButtonTextBox.width / largeTitleTextBox.width;\n    HEIGHT_SCALE = backButtonTextBox.height / (largeTitleTextBox.height - LARGE_TITLE_SIZE_OFFSET);\n    /**\n     * Even though we set TEXT_START_SCALE to HEIGHT_SCALE above, we potentially need\n     * to re-compute this here since the HEIGHT_SCALE may have changed.\n     */\n\n    END_SCALE = doTitleAndButtonTextsMatch ? \"scale(\".concat(WIDTH_SCALE, \", \").concat(HEIGHT_SCALE, \")\") : \"scale(\".concat(HEIGHT_SCALE, \")\");\n  }\n  /**\n   * The midpoints of the back button and the title should align such that the back\n   * button and title appear to be centered with each other.\n   */\n\n\n  var backButtonMidPoint = backButtonBox.top + backButtonBox.height / 2;\n  var titleMidPoint = largeTitleBox.height * HEIGHT_SCALE / 2;\n  var END_TRANSLATE_Y = \"\".concat(backButtonMidPoint - titleMidPoint, \"px\");\n  var BACKWARDS_KEYFRAMES = [{\n    offset: 0,\n    opacity: 0,\n    transform: \"translate3d(\".concat(END_TRANSLATE_X, \", \").concat(END_TRANSLATE_Y, \", 0) \").concat(END_SCALE)\n  }, {\n    offset: 0.1,\n    opacity: 0\n  }, {\n    offset: 1,\n    opacity: 1,\n    transform: \"translate3d(\".concat(START_TRANSLATE_X, \", \").concat(START_TRANSLATE_Y, \", 0) \").concat(START_SCALE)\n  }];\n  var FORWARDS_KEYFRAMES = [{\n    offset: 0,\n    opacity: 0.99,\n    transform: \"translate3d(\".concat(START_TRANSLATE_X, \", \").concat(START_TRANSLATE_Y, \", 0) \").concat(START_SCALE)\n  }, {\n    offset: 0.6,\n    opacity: 0\n  }, {\n    offset: 1,\n    opacity: 0,\n    transform: \"translate3d(\".concat(END_TRANSLATE_X, \", \").concat(END_TRANSLATE_Y, \", 0) \").concat(END_SCALE)\n  }];\n  var KEYFRAMES = backDirection ? BACKWARDS_KEYFRAMES : FORWARDS_KEYFRAMES;\n  var clonedTitleEl = getClonedElement('ion-title');\n  var clonedLargeTitleAnimation = createAnimation();\n  clonedTitleEl.innerText = largeTitleEl.innerText;\n  clonedTitleEl.size = largeTitleEl.size;\n  clonedTitleEl.color = largeTitleEl.color;\n  clonedLargeTitleAnimation.addElement(clonedTitleEl);\n  clonedLargeTitleAnimation.beforeStyles(_defineProperty({\n    'transform-origin': \"\".concat(ORIGIN_X, \" top\"),\n\n    /**\n     * Since font size changes will cause\n     * the dimension of the large title to change\n     * we need to set the cloned title height\n     * equal to that of the original large title height.\n     */\n    height: \"\".concat(largeTitleBox.height, \"px\"),\n    display: '',\n    position: 'relative'\n  }, ORIGIN_X, TITLE_START_OFFSET)).beforeAddWrite(function () {\n    largeTitleEl.style.setProperty('opacity', '0');\n  }).afterAddWrite(function () {\n    largeTitleEl.style.setProperty('opacity', '');\n    clonedTitleEl.style.setProperty('display', 'none');\n  }).keyframes(KEYFRAMES);\n  rootAnimation.addAnimation(clonedLargeTitleAnimation);\n};\n\nvar iosTransitionAnimation = function iosTransitionAnimation(navEl, opts) {\n  var _a;\n\n  try {\n    var EASING = 'cubic-bezier(0.32,0.72,0,1)';\n    var OPACITY = 'opacity';\n    var TRANSFORM = 'transform';\n    var CENTER = '0%';\n    var OFF_OPACITY = 0.8;\n    var isRTL = navEl.ownerDocument.dir === 'rtl';\n    var OFF_RIGHT = isRTL ? '-99.5%' : '99.5%';\n    var OFF_LEFT = isRTL ? '33%' : '-33%';\n    var enteringEl = opts.enteringEl;\n    var leavingEl = opts.leavingEl;\n    var backDirection = opts.direction === 'back';\n    var contentEl = enteringEl.querySelector(':scope > ion-content');\n    var headerEls = enteringEl.querySelectorAll(':scope > ion-header > *:not(ion-toolbar), :scope > ion-footer > *');\n    var enteringToolBarEls = enteringEl.querySelectorAll(':scope > ion-header > ion-toolbar');\n    var rootAnimation = createAnimation();\n    var enteringContentAnimation = createAnimation();\n    rootAnimation.addElement(enteringEl).duration(((_a = opts.duration) !== null && _a !== void 0 ? _a : 0) || DURATION).easing(opts.easing || EASING).fill('both').beforeRemoveClass('ion-page-invisible'); // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n\n    if (leavingEl && navEl !== null && navEl !== undefined) {\n      var navDecorAnimation = createAnimation();\n      navDecorAnimation.addElement(navEl);\n      rootAnimation.addAnimation(navDecorAnimation);\n    }\n\n    if (!contentEl && enteringToolBarEls.length === 0 && headerEls.length === 0) {\n      enteringContentAnimation.addElement(enteringEl.querySelector(':scope > .ion-page, :scope > ion-nav, :scope > ion-tabs')); // REVIEW\n    } else {\n      enteringContentAnimation.addElement(contentEl); // REVIEW\n\n      enteringContentAnimation.addElement(headerEls);\n    }\n\n    rootAnimation.addAnimation(enteringContentAnimation);\n\n    if (backDirection) {\n      enteringContentAnimation.beforeClearStyles([OPACITY]).fromTo('transform', \"translateX(\".concat(OFF_LEFT, \")\"), \"translateX(\".concat(CENTER, \")\")).fromTo(OPACITY, OFF_OPACITY, 1);\n    } else {\n      // entering content, forward direction\n      enteringContentAnimation.beforeClearStyles([OPACITY]).fromTo('transform', \"translateX(\".concat(OFF_RIGHT, \")\"), \"translateX(\".concat(CENTER, \")\"));\n    }\n\n    if (contentEl) {\n      var enteringTransitionEffectEl = shadow(contentEl).querySelector('.transition-effect');\n\n      if (enteringTransitionEffectEl) {\n        var enteringTransitionCoverEl = enteringTransitionEffectEl.querySelector('.transition-cover');\n        var enteringTransitionShadowEl = enteringTransitionEffectEl.querySelector('.transition-shadow');\n        var enteringTransitionEffect = createAnimation();\n        var enteringTransitionCover = createAnimation();\n        var enteringTransitionShadow = createAnimation();\n        enteringTransitionEffect.addElement(enteringTransitionEffectEl).beforeStyles({\n          opacity: '1',\n          display: 'block'\n        }).afterStyles({\n          opacity: '',\n          display: ''\n        });\n        enteringTransitionCover.addElement(enteringTransitionCoverEl) // REVIEW\n        .beforeClearStyles([OPACITY]).fromTo(OPACITY, 0, 0.1);\n        enteringTransitionShadow.addElement(enteringTransitionShadowEl) // REVIEW\n        .beforeClearStyles([OPACITY]).fromTo(OPACITY, 0.03, 0.7);\n        enteringTransitionEffect.addAnimation([enteringTransitionCover, enteringTransitionShadow]);\n        enteringContentAnimation.addAnimation([enteringTransitionEffect]);\n      }\n    }\n\n    var enteringContentHasLargeTitle = enteringEl.querySelector('ion-header.header-collapse-condense');\n\n    var _createLargeTitleTran = createLargeTitleTransition(rootAnimation, isRTL, backDirection, enteringEl, leavingEl),\n        forward = _createLargeTitleTran.forward,\n        backward = _createLargeTitleTran.backward;\n\n    enteringToolBarEls.forEach(function (enteringToolBarEl) {\n      var enteringToolBar = createAnimation();\n      enteringToolBar.addElement(enteringToolBarEl);\n      rootAnimation.addAnimation(enteringToolBar);\n      var enteringTitle = createAnimation();\n      enteringTitle.addElement(enteringToolBarEl.querySelector('ion-title')); // REVIEW\n\n      var enteringToolBarButtons = createAnimation();\n      var buttons = Array.from(enteringToolBarEl.querySelectorAll('ion-buttons,[menuToggle]'));\n      var parentHeader = enteringToolBarEl.closest('ion-header');\n      var inactiveHeader = parentHeader === null || parentHeader === void 0 ? void 0 : parentHeader.classList.contains('header-collapse-condense-inactive');\n      var buttonsToAnimate;\n\n      if (backDirection) {\n        buttonsToAnimate = buttons.filter(function (button) {\n          var isCollapseButton = button.classList.contains('buttons-collapse');\n          return isCollapseButton && !inactiveHeader || !isCollapseButton;\n        });\n      } else {\n        buttonsToAnimate = buttons.filter(function (button) {\n          return !button.classList.contains('buttons-collapse');\n        });\n      }\n\n      enteringToolBarButtons.addElement(buttonsToAnimate);\n      var enteringToolBarItems = createAnimation();\n      enteringToolBarItems.addElement(enteringToolBarEl.querySelectorAll(':scope > *:not(ion-title):not(ion-buttons):not([menuToggle])'));\n      var enteringToolBarBg = createAnimation();\n      enteringToolBarBg.addElement(shadow(enteringToolBarEl).querySelector('.toolbar-background')); // REVIEW\n\n      var enteringBackButton = createAnimation();\n      var backButtonEl = enteringToolBarEl.querySelector('ion-back-button');\n\n      if (backButtonEl) {\n        enteringBackButton.addElement(backButtonEl);\n      }\n\n      enteringToolBar.addAnimation([enteringTitle, enteringToolBarButtons, enteringToolBarItems, enteringToolBarBg, enteringBackButton]);\n      enteringToolBarButtons.fromTo(OPACITY, 0.01, 1);\n      enteringToolBarItems.fromTo(OPACITY, 0.01, 1);\n\n      if (backDirection) {\n        if (!inactiveHeader) {\n          enteringTitle.fromTo('transform', \"translateX(\".concat(OFF_LEFT, \")\"), \"translateX(\".concat(CENTER, \")\")).fromTo(OPACITY, 0.01, 1);\n        }\n\n        enteringToolBarItems.fromTo('transform', \"translateX(\".concat(OFF_LEFT, \")\"), \"translateX(\".concat(CENTER, \")\")); // back direction, entering page has a back button\n\n        enteringBackButton.fromTo(OPACITY, 0.01, 1);\n      } else {\n        // entering toolbar, forward direction\n        if (!enteringContentHasLargeTitle) {\n          enteringTitle.fromTo('transform', \"translateX(\".concat(OFF_RIGHT, \")\"), \"translateX(\".concat(CENTER, \")\")).fromTo(OPACITY, 0.01, 1);\n        }\n\n        enteringToolBarItems.fromTo('transform', \"translateX(\".concat(OFF_RIGHT, \")\"), \"translateX(\".concat(CENTER, \")\"));\n        enteringToolBarBg.beforeClearStyles([OPACITY, 'transform']);\n        var translucentHeader = parentHeader === null || parentHeader === void 0 ? void 0 : parentHeader.translucent;\n\n        if (!translucentHeader) {\n          enteringToolBarBg.fromTo(OPACITY, 0.01, 'var(--opacity)');\n        } else {\n          enteringToolBarBg.fromTo('transform', isRTL ? 'translateX(-100%)' : 'translateX(100%)', 'translateX(0px)');\n        } // forward direction, entering page has a back button\n\n\n        if (!forward) {\n          enteringBackButton.fromTo(OPACITY, 0.01, 1);\n        }\n\n        if (backButtonEl && !forward) {\n          var enteringBackBtnText = createAnimation();\n          enteringBackBtnText.addElement(shadow(backButtonEl).querySelector('.button-text')) // REVIEW\n          .fromTo(\"transform\", isRTL ? 'translateX(-100px)' : 'translateX(100px)', 'translateX(0px)');\n          enteringToolBar.addAnimation(enteringBackBtnText);\n        }\n      }\n    }); // setup leaving view\n\n    if (leavingEl) {\n      var leavingContent = createAnimation();\n      var leavingContentEl = leavingEl.querySelector(':scope > ion-content');\n      var leavingToolBarEls = leavingEl.querySelectorAll(':scope > ion-header > ion-toolbar');\n      var leavingHeaderEls = leavingEl.querySelectorAll(':scope > ion-header > *:not(ion-toolbar), :scope > ion-footer > *');\n\n      if (!leavingContentEl && leavingToolBarEls.length === 0 && leavingHeaderEls.length === 0) {\n        leavingContent.addElement(leavingEl.querySelector(':scope > .ion-page, :scope > ion-nav, :scope > ion-tabs')); // REVIEW\n      } else {\n        leavingContent.addElement(leavingContentEl); // REVIEW\n\n        leavingContent.addElement(leavingHeaderEls);\n      }\n\n      rootAnimation.addAnimation(leavingContent);\n\n      if (backDirection) {\n        // leaving content, back direction\n        leavingContent.beforeClearStyles([OPACITY]).fromTo('transform', \"translateX(\".concat(CENTER, \")\"), isRTL ? 'translateX(-100%)' : 'translateX(100%)');\n        var leavingPage = getIonPageElement(leavingEl);\n        rootAnimation.afterAddWrite(function () {\n          if (rootAnimation.getDirection() === 'normal') {\n            leavingPage.style.setProperty('display', 'none');\n          }\n        });\n      } else {\n        // leaving content, forward direction\n        leavingContent.fromTo('transform', \"translateX(\".concat(CENTER, \")\"), \"translateX(\".concat(OFF_LEFT, \")\")).fromTo(OPACITY, 1, OFF_OPACITY);\n      }\n\n      if (leavingContentEl) {\n        var leavingTransitionEffectEl = shadow(leavingContentEl).querySelector('.transition-effect');\n\n        if (leavingTransitionEffectEl) {\n          var leavingTransitionCoverEl = leavingTransitionEffectEl.querySelector('.transition-cover');\n          var leavingTransitionShadowEl = leavingTransitionEffectEl.querySelector('.transition-shadow');\n          var leavingTransitionEffect = createAnimation();\n          var leavingTransitionCover = createAnimation();\n          var leavingTransitionShadow = createAnimation();\n          leavingTransitionEffect.addElement(leavingTransitionEffectEl).beforeStyles({\n            opacity: '1',\n            display: 'block'\n          }).afterStyles({\n            opacity: '',\n            display: ''\n          });\n          leavingTransitionCover.addElement(leavingTransitionCoverEl) // REVIEW\n          .beforeClearStyles([OPACITY]).fromTo(OPACITY, 0.1, 0);\n          leavingTransitionShadow.addElement(leavingTransitionShadowEl) // REVIEW\n          .beforeClearStyles([OPACITY]).fromTo(OPACITY, 0.7, 0.03);\n          leavingTransitionEffect.addAnimation([leavingTransitionCover, leavingTransitionShadow]);\n          leavingContent.addAnimation([leavingTransitionEffect]);\n        }\n      }\n\n      leavingToolBarEls.forEach(function (leavingToolBarEl) {\n        var leavingToolBar = createAnimation();\n        leavingToolBar.addElement(leavingToolBarEl);\n        var leavingTitle = createAnimation();\n        leavingTitle.addElement(leavingToolBarEl.querySelector('ion-title')); // REVIEW\n\n        var leavingToolBarButtons = createAnimation();\n        var buttons = leavingToolBarEl.querySelectorAll('ion-buttons,[menuToggle]');\n        var parentHeader = leavingToolBarEl.closest('ion-header');\n        var inactiveHeader = parentHeader === null || parentHeader === void 0 ? void 0 : parentHeader.classList.contains('header-collapse-condense-inactive');\n        var buttonsToAnimate = Array.from(buttons).filter(function (button) {\n          var isCollapseButton = button.classList.contains('buttons-collapse');\n          return isCollapseButton && !inactiveHeader || !isCollapseButton;\n        });\n        leavingToolBarButtons.addElement(buttonsToAnimate);\n        var leavingToolBarItems = createAnimation();\n        var leavingToolBarItemEls = leavingToolBarEl.querySelectorAll(':scope > *:not(ion-title):not(ion-buttons):not([menuToggle])');\n\n        if (leavingToolBarItemEls.length > 0) {\n          leavingToolBarItems.addElement(leavingToolBarItemEls);\n        }\n\n        var leavingToolBarBg = createAnimation();\n        leavingToolBarBg.addElement(shadow(leavingToolBarEl).querySelector('.toolbar-background')); // REVIEW\n\n        var leavingBackButton = createAnimation();\n        var backButtonEl = leavingToolBarEl.querySelector('ion-back-button');\n\n        if (backButtonEl) {\n          leavingBackButton.addElement(backButtonEl);\n        }\n\n        leavingToolBar.addAnimation([leavingTitle, leavingToolBarButtons, leavingToolBarItems, leavingBackButton, leavingToolBarBg]);\n        rootAnimation.addAnimation(leavingToolBar); // fade out leaving toolbar items\n\n        leavingBackButton.fromTo(OPACITY, 0.99, 0);\n        leavingToolBarButtons.fromTo(OPACITY, 0.99, 0);\n        leavingToolBarItems.fromTo(OPACITY, 0.99, 0);\n\n        if (backDirection) {\n          if (!inactiveHeader) {\n            // leaving toolbar, back direction\n            leavingTitle.fromTo('transform', \"translateX(\".concat(CENTER, \")\"), isRTL ? 'translateX(-100%)' : 'translateX(100%)').fromTo(OPACITY, 0.99, 0);\n          }\n\n          leavingToolBarItems.fromTo('transform', \"translateX(\".concat(CENTER, \")\"), isRTL ? 'translateX(-100%)' : 'translateX(100%)');\n          leavingToolBarBg.beforeClearStyles([OPACITY, 'transform']); // leaving toolbar, back direction, and there's no entering toolbar\n          // should just slide out, no fading out\n\n          var translucentHeader = parentHeader === null || parentHeader === void 0 ? void 0 : parentHeader.translucent;\n\n          if (!translucentHeader) {\n            leavingToolBarBg.fromTo(OPACITY, 'var(--opacity)', 0);\n          } else {\n            leavingToolBarBg.fromTo('transform', 'translateX(0px)', isRTL ? 'translateX(-100%)' : 'translateX(100%)');\n          }\n\n          if (backButtonEl && !backward) {\n            var leavingBackBtnText = createAnimation();\n            leavingBackBtnText.addElement(shadow(backButtonEl).querySelector('.button-text')) // REVIEW\n            .fromTo('transform', \"translateX(\".concat(CENTER, \")\"), \"translateX(\".concat((isRTL ? -124 : 124) + 'px', \")\"));\n            leavingToolBar.addAnimation(leavingBackBtnText);\n          }\n        } else {\n          // leaving toolbar, forward direction\n          if (!inactiveHeader) {\n            leavingTitle.fromTo('transform', \"translateX(\".concat(CENTER, \")\"), \"translateX(\".concat(OFF_LEFT, \")\")).fromTo(OPACITY, 0.99, 0).afterClearStyles([TRANSFORM, OPACITY]);\n          }\n\n          leavingToolBarItems.fromTo('transform', \"translateX(\".concat(CENTER, \")\"), \"translateX(\".concat(OFF_LEFT, \")\")).afterClearStyles([TRANSFORM, OPACITY]);\n          leavingBackButton.afterClearStyles([OPACITY]);\n          leavingTitle.afterClearStyles([OPACITY]);\n          leavingToolBarButtons.afterClearStyles([OPACITY]);\n        }\n      });\n    }\n\n    return rootAnimation;\n  } catch (err) {\n    throw err;\n  }\n};\n/**\n * The scale of the back button during the animation\n * is computed based on the scale of the large title\n * and vice versa. However, we need to account for slight\n * variations in the size of the large title due to\n * padding and font weight. This value should be used to subtract\n * a small amount from the large title height when computing scales\n * to get more accurate scale results.\n */\n\n\nvar LARGE_TITLE_SIZE_OFFSET = 10;\nexport { iosTransitionAnimation, shadow };","map":null,"metadata":{},"sourceType":"module"}